/*
 * This file is generated by jOOQ.
 */
package com.example.boot.data.database.jooq.tables;


import com.example.boot.data.database.jooq.Keys;
import com.example.boot.data.database.jooq.PhysicalExaminationSystem;
import com.example.boot.data.database.jooq.tables.records.SystemConfigRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemConfig extends TableImpl<SystemConfigRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>physical_examination_system.system_config</code>
     */
    public static final SystemConfig SYSTEM_CONFIG = new SystemConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SystemConfigRecord> getRecordType() {
        return SystemConfigRecord.class;
    }

    /**
     * The column <code>physical_examination_system.system_config.id</code>.
     */
    public final TableField<SystemConfigRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>physical_examination_system.system_config.created_by</code>.
     */
    public final TableField<SystemConfigRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>physical_examination_system.system_config.created_date</code>.
     */
    public final TableField<SystemConfigRecord, LocalDateTime> CREATED_DATE = createField(DSL.name("created_date"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>physical_examination_system.system_config.is_deleted</code>.
     */
    public final TableField<SystemConfigRecord, Integer> IS_DELETED = createField(DSL.name("is_deleted"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>physical_examination_system.system_config.modified_by</code>.
     */
    public final TableField<SystemConfigRecord, String> MODIFIED_BY = createField(DSL.name("modified_by"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>physical_examination_system.system_config.modified_date</code>.
     */
    public final TableField<SystemConfigRecord, LocalDateTime> MODIFIED_DATE = createField(DSL.name("modified_date"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>physical_examination_system.system_config.name</code>.
     */
    public final TableField<SystemConfigRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>physical_examination_system.system_config.value</code>.
     */
    public final TableField<SystemConfigRecord, String> VALUE = createField(DSL.name("value"), SQLDataType.VARCHAR(255), this, "");

    private SystemConfig(Name alias, Table<SystemConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private SystemConfig(Name alias, Table<SystemConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>physical_examination_system.system_config</code> table reference
     */
    public SystemConfig(String alias) {
        this(DSL.name(alias), SYSTEM_CONFIG);
    }

    /**
     * Create an aliased <code>physical_examination_system.system_config</code> table reference
     */
    public SystemConfig(Name alias) {
        this(alias, SYSTEM_CONFIG);
    }

    /**
     * Create a <code>physical_examination_system.system_config</code> table reference
     */
    public SystemConfig() {
        this(DSL.name("system_config"), null);
    }

    public <O extends Record> SystemConfig(Table<O> child, ForeignKey<O, SystemConfigRecord> key) {
        super(child, key, SYSTEM_CONFIG);
    }

    @Override
    public Schema getSchema() {
        return PhysicalExaminationSystem.PHYSICAL_EXAMINATION_SYSTEM;
    }

    @Override
    public UniqueKey<SystemConfigRecord> getPrimaryKey() {
        return Keys.KEY_SYSTEM_CONFIG_PRIMARY;
    }

    @Override
    public List<UniqueKey<SystemConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<SystemConfigRecord>>asList(Keys.KEY_SYSTEM_CONFIG_PRIMARY);
    }

    @Override
    public SystemConfig as(String alias) {
        return new SystemConfig(DSL.name(alias), this);
    }

    @Override
    public SystemConfig as(Name alias) {
        return new SystemConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SystemConfig rename(String name) {
        return new SystemConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SystemConfig rename(Name name) {
        return new SystemConfig(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, LocalDateTime, Integer, String, LocalDateTime, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
