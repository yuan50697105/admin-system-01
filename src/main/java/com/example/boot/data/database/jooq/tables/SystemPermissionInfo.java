/*
 * This file is generated by jOOQ.
 */
package com.example.boot.data.database.jooq.tables;


import com.example.boot.data.database.jooq.Keys;
import com.example.boot.data.database.jooq.PhysicalExaminationSystem;
import com.example.boot.data.database.jooq.tables.records.SystemPermissionInfoRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * system_permission_info
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemPermissionInfo extends TableImpl<SystemPermissionInfoRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>physical_examination_system.system_permission_info</code>
     */
    public static final SystemPermissionInfo SYSTEM_PERMISSION_INFO = new SystemPermissionInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SystemPermissionInfoRecord> getRecordType() {
        return SystemPermissionInfoRecord.class;
    }

    /**
     * The column <code>physical_examination_system.system_permission_info.id</code>. id
     */
    public final TableField<SystemPermissionInfoRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "id");

    /**
     * The column <code>physical_examination_system.system_permission_info.created_date</code>. createdDate
     */
    public final TableField<SystemPermissionInfoRecord, LocalDateTime> CREATED_DATE = createField(DSL.name("created_date"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.inline("1000-01-01 00:00:00", SQLDataType.LOCALDATETIME)), this, "createdDate");

    /**
     * The column <code>physical_examination_system.system_permission_info.modified_date</code>. modifiedDate
     */
    public final TableField<SystemPermissionInfoRecord, LocalDateTime> MODIFIED_DATE = createField(DSL.name("modified_date"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.inline("1000-01-01 00:00:00", SQLDataType.LOCALDATETIME)), this, "modifiedDate");

    /**
     * The column <code>physical_examination_system.system_permission_info.created_by</code>. createdBy
     */
    public final TableField<SystemPermissionInfoRecord, String> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.VARCHAR(50).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "createdBy");

    /**
     * The column <code>physical_examination_system.system_permission_info.modified_by</code>. modifiedBy
     */
    public final TableField<SystemPermissionInfoRecord, String> MODIFIED_BY = createField(DSL.name("modified_by"), SQLDataType.VARCHAR(50).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "modifiedBy");

    /**
     * The column <code>physical_examination_system.system_permission_info.is_deleted</code>. isDeleted
     */
    public final TableField<SystemPermissionInfoRecord, Integer> IS_DELETED = createField(DSL.name("is_deleted"), SQLDataType.INTEGER.defaultValue(DSL.inline("-1", SQLDataType.INTEGER)), this, "isDeleted");

    /**
     * The column <code>physical_examination_system.system_permission_info.name</code>. 权限名称
     */
    public final TableField<SystemPermissionInfoRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(50).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "权限名称");

    /**
     * The column <code>physical_examination_system.system_permission_info.module</code>. 模块名称
     */
    public final TableField<SystemPermissionInfoRecord, String> MODULE = createField(DSL.name("module"), SQLDataType.VARCHAR(50).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "模块名称");

    /**
     * The column <code>physical_examination_system.system_permission_info.full_name</code>. 全名称
     * 模块名称:权限名称
     */
    public final TableField<SystemPermissionInfoRecord, String> FULL_NAME = createField(DSL.name("full_name"), SQLDataType.VARCHAR(50).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "全名称\r\n     * 模块名称:权限名称");

    /**
     * The column <code>physical_examination_system.system_permission_info.level</code>. 排序
     */
    public final TableField<SystemPermissionInfoRecord, Integer> LEVEL = createField(DSL.name("level"), SQLDataType.INTEGER.defaultValue(DSL.inline("-1", SQLDataType.INTEGER)), this, "排序");

    /**
     * The column <code>physical_examination_system.system_permission_info.is_enabled</code>. 是否启用
     * 0 否 1 是
     */
    public final TableField<SystemPermissionInfoRecord, Integer> IS_ENABLED = createField(DSL.name("is_enabled"), SQLDataType.INTEGER.defaultValue(DSL.inline("-1", SQLDataType.INTEGER)), this, "是否启用\r\n     * 0 否 1 是");

    private SystemPermissionInfo(Name alias, Table<SystemPermissionInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private SystemPermissionInfo(Name alias, Table<SystemPermissionInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("system_permission_info"), TableOptions.table());
    }

    /**
     * Create an aliased <code>physical_examination_system.system_permission_info</code> table reference
     */
    public SystemPermissionInfo(String alias) {
        this(DSL.name(alias), SYSTEM_PERMISSION_INFO);
    }

    /**
     * Create an aliased <code>physical_examination_system.system_permission_info</code> table reference
     */
    public SystemPermissionInfo(Name alias) {
        this(alias, SYSTEM_PERMISSION_INFO);
    }

    /**
     * Create a <code>physical_examination_system.system_permission_info</code> table reference
     */
    public SystemPermissionInfo() {
        this(DSL.name("system_permission_info"), null);
    }

    public <O extends Record> SystemPermissionInfo(Table<O> child, ForeignKey<O, SystemPermissionInfoRecord> key) {
        super(child, key, SYSTEM_PERMISSION_INFO);
    }

    @Override
    public Schema getSchema() {
        return PhysicalExaminationSystem.PHYSICAL_EXAMINATION_SYSTEM;
    }

    @Override
    public Identity<SystemPermissionInfoRecord, Long> getIdentity() {
        return (Identity<SystemPermissionInfoRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<SystemPermissionInfoRecord> getPrimaryKey() {
        return Keys.KEY_SYSTEM_PERMISSION_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<SystemPermissionInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<SystemPermissionInfoRecord>>asList(Keys.KEY_SYSTEM_PERMISSION_INFO_PRIMARY);
    }

    @Override
    public SystemPermissionInfo as(String alias) {
        return new SystemPermissionInfo(DSL.name(alias), this);
    }

    @Override
    public SystemPermissionInfo as(Name alias) {
        return new SystemPermissionInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SystemPermissionInfo rename(String name) {
        return new SystemPermissionInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SystemPermissionInfo rename(Name name) {
        return new SystemPermissionInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, LocalDateTime, LocalDateTime, String, String, Integer, String, String, String, Integer, Integer> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
