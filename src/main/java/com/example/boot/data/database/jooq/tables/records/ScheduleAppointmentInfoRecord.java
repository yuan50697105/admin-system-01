/*
 * This file is generated by jOOQ.
 */
package com.example.boot.data.database.jooq.tables.records;


import com.example.boot.data.database.jooq.tables.ScheduleAppointmentInfo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 预约排期
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduleAppointmentInfoRecord extends UpdatableRecordImpl<ScheduleAppointmentInfoRecord> implements Record10<Long, LocalDateTime, LocalDateTime, String, String, Integer, LocalDateTime, LocalDateTime, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>physical_examination_system.schedule_appointment_info.id</code>. id
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>physical_examination_system.schedule_appointment_info.id</code>. id
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>physical_examination_system.schedule_appointment_info.created_date</code>. createdDate
     */
    public void setCreatedDate(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>physical_examination_system.schedule_appointment_info.created_date</code>. createdDate
     */
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>physical_examination_system.schedule_appointment_info.modified_date</code>. modifiedDate
     */
    public void setModifiedDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>physical_examination_system.schedule_appointment_info.modified_date</code>. modifiedDate
     */
    public LocalDateTime getModifiedDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>physical_examination_system.schedule_appointment_info.created_by</code>. createdBy
     */
    public void setCreatedBy(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>physical_examination_system.schedule_appointment_info.created_by</code>. createdBy
     */
    public String getCreatedBy() {
        return (String) get(3);
    }

    /**
     * Setter for <code>physical_examination_system.schedule_appointment_info.modified_by</code>. modifiedBy
     */
    public void setModifiedBy(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>physical_examination_system.schedule_appointment_info.modified_by</code>. modifiedBy
     */
    public String getModifiedBy() {
        return (String) get(4);
    }

    /**
     * Setter for <code>physical_examination_system.schedule_appointment_info.is_deleted</code>. isDeleted
     */
    public void setIsDeleted(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>physical_examination_system.schedule_appointment_info.is_deleted</code>. isDeleted
     */
    public Integer getIsDeleted() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>physical_examination_system.schedule_appointment_info.appointment_date</code>. 预约日期
     */
    public void setAppointmentDate(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>physical_examination_system.schedule_appointment_info.appointment_date</code>. 预约日期
     */
    public LocalDateTime getAppointmentDate() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>physical_examination_system.schedule_appointment_info.appointment_cycle</code>. 预约区间
     * 1 全天 2 上午 3 下午
     */
    public void setAppointmentCycle(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>physical_examination_system.schedule_appointment_info.appointment_cycle</code>. 预约区间
     * 1 全天 2 上午 3 下午
     */
    public LocalDateTime getAppointmentCycle() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>physical_examination_system.schedule_appointment_info.appointment_type</code>. 预约类型
     * 1 个人 2 团队 3 总数
     */
    public void setAppointmentType(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>physical_examination_system.schedule_appointment_info.appointment_type</code>. 预约类型
     * 1 个人 2 团队 3 总数
     */
    public Integer getAppointmentType() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>physical_examination_system.schedule_appointment_info.is_enable</code>. 是否启用
     * 1 是 0 否
     */
    public void setIsEnable(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>physical_examination_system.schedule_appointment_info.is_enable</code>. 是否启用
     * 1 是 0 否
     */
    public Integer getIsEnable() {
        return (Integer) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, LocalDateTime, LocalDateTime, String, String, Integer, LocalDateTime, LocalDateTime, Integer, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, LocalDateTime, LocalDateTime, String, String, Integer, LocalDateTime, LocalDateTime, Integer, Integer> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ScheduleAppointmentInfo.SCHEDULE_APPOINTMENT_INFO.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return ScheduleAppointmentInfo.SCHEDULE_APPOINTMENT_INFO.CREATED_DATE;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return ScheduleAppointmentInfo.SCHEDULE_APPOINTMENT_INFO.MODIFIED_DATE;
    }

    @Override
    public Field<String> field4() {
        return ScheduleAppointmentInfo.SCHEDULE_APPOINTMENT_INFO.CREATED_BY;
    }

    @Override
    public Field<String> field5() {
        return ScheduleAppointmentInfo.SCHEDULE_APPOINTMENT_INFO.MODIFIED_BY;
    }

    @Override
    public Field<Integer> field6() {
        return ScheduleAppointmentInfo.SCHEDULE_APPOINTMENT_INFO.IS_DELETED;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return ScheduleAppointmentInfo.SCHEDULE_APPOINTMENT_INFO.APPOINTMENT_DATE;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return ScheduleAppointmentInfo.SCHEDULE_APPOINTMENT_INFO.APPOINTMENT_CYCLE;
    }

    @Override
    public Field<Integer> field9() {
        return ScheduleAppointmentInfo.SCHEDULE_APPOINTMENT_INFO.APPOINTMENT_TYPE;
    }

    @Override
    public Field<Integer> field10() {
        return ScheduleAppointmentInfo.SCHEDULE_APPOINTMENT_INFO.IS_ENABLE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedDate();
    }

    @Override
    public LocalDateTime component3() {
        return getModifiedDate();
    }

    @Override
    public String component4() {
        return getCreatedBy();
    }

    @Override
    public String component5() {
        return getModifiedBy();
    }

    @Override
    public Integer component6() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime component7() {
        return getAppointmentDate();
    }

    @Override
    public LocalDateTime component8() {
        return getAppointmentCycle();
    }

    @Override
    public Integer component9() {
        return getAppointmentType();
    }

    @Override
    public Integer component10() {
        return getIsEnable();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedDate();
    }

    @Override
    public LocalDateTime value3() {
        return getModifiedDate();
    }

    @Override
    public String value4() {
        return getCreatedBy();
    }

    @Override
    public String value5() {
        return getModifiedBy();
    }

    @Override
    public Integer value6() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime value7() {
        return getAppointmentDate();
    }

    @Override
    public LocalDateTime value8() {
        return getAppointmentCycle();
    }

    @Override
    public Integer value9() {
        return getAppointmentType();
    }

    @Override
    public Integer value10() {
        return getIsEnable();
    }

    @Override
    public ScheduleAppointmentInfoRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ScheduleAppointmentInfoRecord value2(LocalDateTime value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public ScheduleAppointmentInfoRecord value3(LocalDateTime value) {
        setModifiedDate(value);
        return this;
    }

    @Override
    public ScheduleAppointmentInfoRecord value4(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public ScheduleAppointmentInfoRecord value5(String value) {
        setModifiedBy(value);
        return this;
    }

    @Override
    public ScheduleAppointmentInfoRecord value6(Integer value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public ScheduleAppointmentInfoRecord value7(LocalDateTime value) {
        setAppointmentDate(value);
        return this;
    }

    @Override
    public ScheduleAppointmentInfoRecord value8(LocalDateTime value) {
        setAppointmentCycle(value);
        return this;
    }

    @Override
    public ScheduleAppointmentInfoRecord value9(Integer value) {
        setAppointmentType(value);
        return this;
    }

    @Override
    public ScheduleAppointmentInfoRecord value10(Integer value) {
        setIsEnable(value);
        return this;
    }

    @Override
    public ScheduleAppointmentInfoRecord values(Long value1, LocalDateTime value2, LocalDateTime value3, String value4, String value5, Integer value6, LocalDateTime value7, LocalDateTime value8, Integer value9, Integer value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScheduleAppointmentInfoRecord
     */
    public ScheduleAppointmentInfoRecord() {
        super(ScheduleAppointmentInfo.SCHEDULE_APPOINTMENT_INFO);
    }

    /**
     * Create a detached, initialised ScheduleAppointmentInfoRecord
     */
    public ScheduleAppointmentInfoRecord(Long id, LocalDateTime createdDate, LocalDateTime modifiedDate, String createdBy, String modifiedBy, Integer isDeleted, LocalDateTime appointmentDate, LocalDateTime appointmentCycle, Integer appointmentType, Integer isEnable) {
        super(ScheduleAppointmentInfo.SCHEDULE_APPOINTMENT_INFO);

        setId(id);
        setCreatedDate(createdDate);
        setModifiedDate(modifiedDate);
        setCreatedBy(createdBy);
        setModifiedBy(modifiedBy);
        setIsDeleted(isDeleted);
        setAppointmentDate(appointmentDate);
        setAppointmentCycle(appointmentCycle);
        setAppointmentType(appointmentType);
        setIsEnable(isEnable);
    }
}
